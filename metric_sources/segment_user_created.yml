---
name: Segment - User Created v1
description: Testing metric creation
sql: WITH user_created AS (
SELECT 
  event_occurred_at_ts, --required field
  user_id, --required field
  JSON_VALUE(properties, '$.anonymousId') as anonymous_id,
  event
FROM `statsig-production.statsig_analytics.segment_events`
-- example filter to a subset of events.
-- metric definitions could further filter to a specific event
WHERE event IN ('user_created')
-- Optionally use date filter macros
-- to ensure that partition pruning is applied 
    AND event_occurred_at_date BETWEEN {statsig_start_date} AND {statsig_end_date}
),
user_id_to_anon_id AS (
    SELECT * FROM `statsig-production.statsig_analytics..user_id_to_anon_id`
),

anon_id_to_cal_anon_id AS (
    SELECT * FROM `statsig-production.statsig_analytics..anon_id_to_cal_anon_id`
),

user_id_to_cal_anon_id AS (
    SELECT * FROM `statsig-production.statsig_analytics..user_id_to_cal_anon_id`
)

SELECT
  ucd.*,
  COALESCE(uc.cal_anonymous_id, ac.cal_anonymous_id) AS cal_anonymous_id
FROM user_created AS ucd
LEFT JOIN user_id_to_cal_anon_id AS uc 
	ON ucd.user_id = uc.user_id
LEFT JOIN user_id_to_anon_id AS ua 
	ON ucd.user_id = ua.user_id
LEFT JOIN anon_id_to_cal_anon_id AS ac 
	ON COALESCE(ucd.anonymous_id, ua.anonymous_id) = ac.anonymous_id
timestampColumn: event_occurred_at_ts
timestampAsDay: false
idTypeMapping:
- statsigUnitID: userID
  column: cal_anonymous_id
